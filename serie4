Q1)
CREATE TABLE emps(
   nemp int primary key ,
   nom varchar(10),
   prenom varchar(10),
   salaire int , 
   nservice int ,
   ville varchar(10)   
);

Q2)
create or replace trigger t1
after insert on emps
for each row
begin
insert into mustapha.emps values (:new.nemp , UPPER(:new.nom), UPPER(:new.prenom) , :new.salaire , :new.nservice,:new.ville);
end;
/
Q3)
insert into emps values (1,'mostare' ,'asma' , 15000 , 3,'agadir');
Q4)
drop trigger t1;
Q5)

create view VEmps1 
as
select * from emps where nservice =1
/

Q6)
select * from VEmps1;

Q7) 
insert into VEmps1 values (1,'mostare1' ,'asma2' , 15000 , 3,'agadir');
Q8) 
select * from emps;
Q9)

create or replace view VEmps2
as
select * from emps where nservice =1
with check option;
/

Q10) 
insert into VEmps1 values (1,'mostare1' ,'asma2' , 15000 , 2,'agadir');

Q11) 
create or replace trigger VEmps2T
instead of insert on VEmps2
for each row
begin
insert into emps values 
   (:new.nemp , 
   :new.nom, 
   :new.prenom , 
   :new.salaire , 
   :new.nservice, 
   :new.ville);
end;
/
Q12) 
insert into VEmps2 values (1,'mostare1' ,'asma2' , 15000 , 2,'agadir');
Q13) 
update vemps2 set nservice =3 where nservice=1;
Q14)    
CREATE OR REPLACE TRIGGER t2
INSTEAD OF INSERT OR UPDATE OR DELETE ON VEmps2
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO emps
        VALUES (:new.nemp , 
                :new.nom, 
                :new.prenom , 
                :new.salaire , 
                :new.nservice, 
                :new.ville);
    ELSIF UPDATING THEN
        UPDATE emps
        SET nom = :new.nom,
            prenom = :new.prenom,
            salaire = :new.salaire,
            ville = :new.ville
        WHERE nemp = :old.nemp;
    ELSIF DELETING THEN
        DELETE FROM emps
        WHERE nemp = :old.nemp;
    END IF;
END;
/


================================fin tp===================================
create database link lienProf using 'xe';

select * from mustapha.emps@lienProf;

create synonym emp for mustapha.emp@lienprof;




